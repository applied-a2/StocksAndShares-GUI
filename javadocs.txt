/*
	 * This method take a commodity type entered by player, then
	 * check if main types list contains that choice, ask 
	 * again if doesn't
	 * @return the valid commodity type chosen by user
	 */
	 
	 /*
	 * This method is called when player chooses to buy shares
	 * The transaction will stop immediately when an invalid event happens
	 * (eg. player tries to buy while he does not have enough money) 
	 * @param the current player
	 * @return 
	 */
	 
	 /*
	 * This method is called when player chooses to sell his share.
	 * The transaction will stop immediately when an invalid event happens
	 * (eg. player tries to sell what he has not bought) 
	 * @param the current player
	 * @return a boolean indicating whether the transaction is finish 
	 */
	 
	 /*
//	 * Restrict the amount of share entered by player, make sure
//	 * it's either 10, 15 or 20 if it's greater than 5. However, 
//	 * if the range of 20 is crossed, the number will remain 
//	 * unchanged, which will be handled by the former method
//	 * @param number entered by player
//	 * @return (restricted) number
//	 */

	/*
	 *This method is called after all rounds 
	 *have finished. All players' shares will be 
	 *sold basing on the final record of the share 
	 *indicator. The final money amount after this will
	 *determine the winner 
	 */